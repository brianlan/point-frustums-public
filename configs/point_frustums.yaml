class_path: point_frustums.models.point_frustums.PointFrustums
init_args:
  model:
    class_path: point_frustums.models.point_frustums.PointFrustumsModel
    init_args:
      backbone:
        class_path: point_frustums.models.backbones.PointFrustumsBackbone
        init_args:
          lidar:
            class_path: point_frustums.models.backbones.frustum_encoder.FrustumEncoder
            init_args:
              channels_in: [x, y, z, intensity, timestamp, radial, polar, azimuthal]
              discretize:
                n_splits_azi: 320
                n_splits_pol: 32
                fov_azi_deg: [-180, 180]
                fov_pol_deg: [80, 120]
              decorate:
                functions:
                  - { id: relative_angle, channel: azimuthal, std: 0.289 }
                  - { id: relative_angle, channel: polar, std: 0.296 }
                  - { id: distance_to_mean, channel: radial, std: 0.280 }
                  - { id: distance_to_mean, channel: x, std: 0.280 }
                  - { id: distance_to_mean, channel: y, std: 2.466 }
                  - { id: distance_to_mean, channel: z, std: 2.471 }
                channels_out: [ z, intensity, timestamp, radial, delta_azi, delta_pol, delta_r, delta_x, delta_y, delta_z ]
              vectorize:
                layers: [ 32 ]
              symmetrize: [ max ]
              reduce:
                layers: [ 32 ]
      neck:
        class_path: point_frustums.models.necks.PointFrustumsNeck
        init_args:
          target_sensor: LIDAR_TOP
          fpn:
            class_path: point_frustums.models.necks.spherical_coos_fpn.FPN
            init_args:
              n_channels_in: 32
              n_channels_out: 64
              layers:
                l0: {n_blocks: 2, n_channels: 32, downsampling_horizontal: False, downsampling_vertical: False}
                l1: {n_blocks: 4, n_channels: 64, downsampling_horizontal: True, downsampling_vertical: True}
                l2: {n_blocks: 2, n_channels: 64, downsampling_horizontal: True, downsampling_vertical: True}
                l3: {n_blocks: 1, n_channels: 64, downsampling_horizontal: True, downsampling_vertical: True}
              extra_layers:
                p4: {downsampling_horizontal: True, downsampling_vertical: False}
              upsampling_mode: nearest
      head:
        class_path: point_frustums.models.heads.PointFrustumsHead
        init_args:
          n_channels_in: 64
          layers_in: [l0, l1, l2, l3, p4]
          n_classes: 10
          n_attributes: 8
          n_convolutions_classification: 4
          n_convolutions_regression: 4
          share_weights: True
  target_assignment:
    alpha: 1.2
    beta: 1
    gamma: 1
    max_iter: 25000
  losses:
    label:
      weight: 2
    center_radial:
      weight: 2
      kwargs:
        beta: 0.2
    center_angular:
      weight: 1
      kwargs:
        beta: 0.5
    orientation:
      weight: 2
      kwargs:
        beta: 0.1
    velocity:
      active: True
      weight: 1.0
    vfl:
      active: False
      weight: 0.5
    attribute:
      active: True
      weight: 1
