class_path: point_frustums.models.point_frustums.PointFrustums
init_args:
  model:
    class_path: point_frustums.models.point_frustums.PointFrustumsModel
    init_args:
      backbone:
        class_path: point_frustums.models.backbones.PointFrustumsBackbone
        init_args:
          lidar:
            class_path: point_frustums.models.backbones.frustum_encoder.FrustumEncoder
            init_args:
              channels_in: [x, y, z, intensity, timestamp, radial, polar, azimuthal]
              discretize:
                n_splits_azi: 480
                n_splits_pol: 40
                fov_azi_deg: [-180, 180]
                fov_pol_deg: [60, 100]
              decorate:
                functions:
                  - { id: relative_angle, channel: azimuthal, std: 0.29 }
                  - { id: relative_angle, channel: polar, std: 0.29 }
                  - { id: distance_to_mean, channel: radial, std: 0.24 }
                  - { id: distance_to_mean, channel: x, std: 2.1 }
                  - { id: distance_to_mean, channel: y, std: 2.1 }
                  - { id: distance_to_mean, channel: z, std: 0.14 }
                channels_out: [ z, intensity, timestamp, radial, delta_azi, delta_pol, delta_r, delta_x, delta_y, delta_z ]
              vectorize:
                layers: [ 128 ]
              symmetrize: [ max ]
              reduce:
                layers: [ 128 ]
              dropout: 0.1
      neck:
        class_path: point_frustums.models.necks.PointFrustumsNeck
        init_args:
          target_sensor: LIDAR_TOP
          fpn:
            class_path: point_frustums.models.necks.spherical_coos_fpn.FPN
            init_args:
              n_channels_in: 128
              n_channels_out: 256
              layers:
                l0: {n_blocks: 2, n_channels: 128, downsampling_horizontal: False, downsampling_vertical: False}
                l1: {n_blocks: 4, n_channels: 256, downsampling_horizontal: True, downsampling_vertical: True}
                l2: {n_blocks: 4, n_channels: 512, downsampling_horizontal: True, downsampling_vertical: True}
                l3: {n_blocks: 2, n_channels: 512, downsampling_horizontal: True, downsampling_vertical: True}
              extra_layers:
                p4: {downsampling_horizontal: True, downsampling_vertical: False}
              upsampling_mode: nearest
              dropout: 0.1
      head:
        class_path: point_frustums.models.heads.PointFrustumsHead
        init_args:
          n_channels_in: 256
          layers_in: [l0, l1, l2, l3, p4]
          n_classes: 10
          n_attributes: 8
          n_convolutions_classification: 4
          n_convolutions_regression: 4
          share_weights: True
          norm_group_size: 4
          dropout: 0.1
  target_assignment:
    alpha: 1.0
    beta: 1
    gamma: 1.5
    max_iter: 1000
    min_k: 3
    max_k: 30
    epsilon: 1.5e-1
  losses:
    label:
      weight: 2
    center_radial:
      weight: 2
      kwargs:
        beta: 0.2
    center_polar:
      weight: 1
      kwargs:
        beta: 0.5
    center_azimuthal:
      weight: 1
      kwargs:
        beta: 0.5
    orientation:
      weight: 1
      kwargs:
        beta: 0.1
    velocity:
      active: True
      weight: 1.0
    vfl:
      active: True
      weight: 1.0
    attribute:
      active: True
      weight: 1.0
  predictions:
    score_vfl_factor: 0.3
    score_threshold: 0.1
    nms_threshold: 0.4
  logging:
    frequency_log_train_sample: 3000
    frequency_log_val_sample: 1000
